
You are an AI that generates XML properties for deep packet inspection.

### MMT Property Context:
XML Rules:
- A <property> defines a security rule (SECURITY_RULE) or an attack rule (ATTACK).
- Each property begins with a <property> tag and ends with </property>
- A property is a "general ordered tree"
- The nodes of the property tree are:
  - <property> node (required)
  - <operator> nodes (optional)
  - <event> nodes (required)
- The <property> node is forcibly the root node and the <event> nodes are forcibly leaf nodes.
- The left branch represents the context and the right branch represents the trigger.
- The property is found valid when the trigger is found valid; and the trigger is checked only if the context is valid.

- <beginning> tag:
  - Container tag for defining multiple properties
  - Holds one or more <property> definitions
  - Includes optional embedded functions.

- A <property> tag contains:
  - value (optional): THEN, defines the logical relationship between context and the trigger
  - delay_min (optional), attribute sets a time constraint on when the trigger must occur relative to the context. A negative delay (-1) means the trigger must have occurred before the context. A zero delay (0) means the trigger must occur simultaneously with the context. A positive delay (+N) means the trigger must occur after the context.
  - property_id (required): attribute uniquely identifies the property.
  - description (required): Textual description of the property.
  - if_satisfied, (optional) specifies an action to be executed when the property condition is met, through the reactive function.
  - type_property (required) can be SECURITY_RULE, ATTACK, EVASION, or TEST

- An <event> tag contains:
  - value:COMPUTE, indicates that this event is evaluated based on a boolean expression.
  - event_id, assigns a unique identifier to the event, allowing it to be referenced within the security property.
  - description: Textual description of the event.
  - boolean_expression, attribute that defines the conditions that determines when the event is triggered. Packet or message attributes are identified by <protocol_name>”.”<field_name>[“.”<event_id>]. Protocol_name is either BASE (containing packet metadata, e.g., protocol id, time slot of message) or the message/protocol identifier (e.g., SPHY_DATA_REQ, IP, TCP, UDP...). Field_name is the name of the attribute. Event_id allows identifying data captured when another event (identified using its id) of the property occurred. Expressions can use packet fields, protocol attributes, or embedded functions.

- <embedded_functions> tag:
  - Contains custom embedded logic (C functions) that can be used within the boolean_expression in <event> tags.
  - One can either use existing embedded functions or implement a new function.
  - They can be used in the boolean_expression by using the syntax #<name_of_function>(<list of parameters>)
  - To avoid any confusion, a new embedded function name should start by a prefix em_
  - Inside the tag, one can also implement 2 other functions as the followings:
    - void on_load(){ ... } being called when the rules inside the xml file being loaded into MMT-Security
    - void on_unload(){ ... } being called when exiting MMT-Security
  - Note that, before using a C function the library containing that embedded functions need to be included. The following libraries have been pre-included:
    -#include <string.h>
    -#include <stdio.h>
    -#include <stdlib.h>
    -#include "mmt_lib.h"
    -#include "pre_embedded_functions.h"

- Reactive functions
  - They allow user perform some action when a rule is satisfied. The functions will be called each time rules are satisfied.
  - To implement and use a reactive function, one need to implement a C function inside <embedded_functions> tag, the function name should be prefixed by em_ to avoid confusion with the ones existing in MMT.
  - The function has the following format:
typedef void (*mmt_rule_satisfied_callback)(
		const rule_t *rule,		          //rule being validated
		int verdict,                     //DETECTED, NOT_RESPECTED
		uint64_t timestamp,              //moment (by time) the rule is validated
		uint64_t counter,                //moment (by order of message) the rule is validated
		const mmt_array_t * const trace  //historic of messages that validates the rule
);

- In the XML file of a rule, if an attribute is absent then its value is set by default
  - property, operator:
    - value: COMPUTE (=> only one <event> is required. Thus delay_min and delay_max must be 0)
    - delay_units: 0
    - delay_max: 0

## Scenario Description:
The system under test consists of an electric vehicle charging station (evcs) that communicates
with a central station management system (csms) using the open charge point protocol (ocpp).
This property ensures that the charging station correctly tracks and reports energy consumption 
during an active charging session. The generated XML should define expected message exchanges, time constraints, and error recovery
mechanisms for ensuring compliance with ocpp-based communication, and message structure.

Protocol: Open Charge Point Protocol (ocpp) 1.6
Property: The charging station must provide accurate energy consumption data during a charging session.

Trigger: At regular intervals during an active charging session, the charging station sends MeterValues messages containing energy usage data to the CSMS.

Response:
- The CSMS must validate and log the received energy consumption data in real time.
- The reported data must have an accuracy of ±0.5 kWh to ensure compliance with energy tracking requirements.

Error Handling:
If the CSMS detects missing or inaccurate energy data, it must trigger a corrective action alert within 10 seconds.
The system must log the issue and notify the network monitoring system for further analysis.

## Protocol Context:
Protocol: ocpp
Attributes: ['message', 'type', 'id', 'action', 'payload']

## Example XML Properties:
### Example 1:
**Description:** Web scan with Nikto. User-Agent based detection
**Protocol(s):** http, ip
**XML Property:**
<beginning>
<!-- Property 15: Web scan with Nikto. User-Agent based detection-->
<property value="THEN" delay_units="ms" delay_min="0" delay_max="0" property_id="15" type_property="ATTACK" 
     description="Nikto detection" >
   <event event_id="1" value="COMPUTE" 
           description="Context: an user agent in the HTTP header"
           boolean_expression="((http.method != '') &amp;&amp; ((http.user_agent != '') &amp;&amp; (ip.src != ip.dst)))"/>
   <event event_id="2" value="COMPUTE" 
           description="Trigger: Nikto detected. "
           boolean_expression="(#strstr(http.user_agent, 'Nikto') != 0)"/>
 </property>
</beginning>


### Example 2:
**Description:** Detect malicious HTTP version
**Protocol(s):** ip, tcp
**XML Property:**
<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- MMT_Security Copyright (C) 2014-->
<beginning>
<embedded_functions><![CDATA[
//each function name should be prefixed by em_
/**
* Return:
* - 0: ok
* - 1: invalid
* - 2: NULL
*/
static inline int em_check_version_http(const char *str){
   
   const char* c = str;
   while( *c != '\0' ){
      if (*c=='H' && c[1]=='T' && c[2]=='T' && c[3]=='P'){
      	if (strstr(c, "HTTP/1.01 ") != NULL) return 1;
      	// "\\" represents "\"
      	break;
      	} 
      c ++;
   }
   return 0;
}
]]></embedded_functions>
<!-- Property 71: Detect malicious HTTP version-->
<property value="THEN" delay_units="ms" delay_min="0" delay_max="0" property_id="71" type_property="ATTACK" 
     description="Detect malicious HTTP versions" >
   <event event_id="1" value="COMPUTE" 
           description="An IP packet"
           boolean_expression="((ip.packet_count != 0) &amp;&amp; (ip.src != ip.dst))"/>
   <event event_id="2" value="COMPUTE" 
           description="Malicious HTTP versions"
           boolean_expression="(#em_check_version_http(tcp.p_payload)==1)"/>
 </property>
</beginning>


### Example 3:
**Description:** TROJAN detection based on the hash table of 426 blacklisted http_uri (426 rules)
**Protocol(s):** http, ip
**XML Property:**
<beginning>
<!-- Property 33: TROJAN detection based on the hash table of 426 blacklisted http_uri (426 rules)
(Ref: Suricata rules emerging-trojan.rules). 
-->
<property value="THEN" delay_units="ms" delay_min="0" delay_max="0" property_id="33" type_property="ATTACK" 
    description="Trojan detection">
    <event value="COMPUTE" event_id="1" 
           description="HTTP URI"
           boolean_expression="(#em_check_trojan_uri(http.uri) == true)"/>
    <event value="COMPUTE" event_id="2" 
           description="HTTP GET"
           boolean_expression="((http.method == 'GET')&amp;&amp;(ip.src != ip.dst))"/> 
</property>
<embedded_functions><![CDATA[
static mmt_hash_t *table = NULL;

static inline int em_check_trojan_uri(const char * uri){
   return( mmt_hash_search( table, uri, strlen( uri )) != NULL );
}

/**
 * List of URI trojans
 */
const char *list_trojan_uri[] = {
"/download/Antivirus_.exe",
"/install/ws.exe",
"/InternetAntivirus.exe",
"/AntivirusPlus.exe",
"/installer..exe",
"download/install.php",
"?mail=subject=Keylogger&body=",
"/newuser.php?saff=",
"/client_update_urls.php",
"/?action=&pc_id=&abbr=&a=&l=",
"nick=&group=&os=",
"?type=scanner&pin=&lnd=",
".php?affid=subid=guid=ver=key=",
"/ctrl/cnt_boot.php?pgv=",
".php?PC=&Data=&Mac=",
"appdata=computador=",
"mac=sys=yp=rand=",
"=&SCRNSZ&BRSRSZ=&TIMEZONE=",
"?wmid=&l=&it=&s=",
"/kernel/zz.htm?Ver=",
".php?tma=&mode=",
".php?l&rvz1=&rvz2=",
"/getnumtemp.asp?nip=0",
".php?c=&v=&b=&id=&cnt=&q=",
".php?mode=&PartID=&mac=",
"/dialer_min/getnum.asp?nip",
"/down/down/?s=&t=&v=",
"m=&a=&r=&os=00000",
"?id=&e=&err=&c=",
"/tlog.php?logn=",
"/tnewu.php?nlogin=",
"?spl=&br=&vers=&s=",
"/getmac.asp?x=&y=",
"/automation/n09230945.asp",
".asp?type=&machinename=",
".php?p4=&p5=&hs=",
".php?cmd=getFile&counter=",
"magic=&id=&cache=&tm=&ox=",
"/common/MSCommonInfoEx.php",
"in.php?affid=&url=&win=&sts=",
"os=&user=&status=&uptime=&cmd=",
"/test.php?abc=?def=",
".php?param=&socks=",
"/reg|3f|u=|26|v=",
".php?win=&id=&lip=",
"mode=boot&MyValue=&code=",
"kgen_up.intfxp=",
"/NewsFolder/News00.ASP?id=",
"/ack.php?version=&uid=&status=",
".php?4x4x4x4x4x6x",
"/gate.php?hash=",
".php?2=&n=&v=&i=&sp=&lcp=",
"/?bot_id=0&mode=1",
"?m=&a=&os=&ComPut=",
"/LoginFacebook.php",
"/cd/cd.php?id=&ver=",
"/cd/un2.php?id=&ver=",
"/cd/un.php?id=&ver=",
"log.php?mac=&ver=&ie=&win=",
"ind.php?p=&uid=",
"start=&Edition=",
"getowner=1&uniqueid=",
"/ld/.phpid=&n=&try=",
".php?&v=&s=&cip=&lid=",
"/?&v=&s=&cip=&lid=",
"bl=&cuid=&cnid=&luid=&rnd=",
"/cs/bux/check.php",
"Srv.SSA-KeyLogger",
"/nomodem.phpif=&am=&cl={&id=",
"/t/d2hsdWF3OzJ0OHY5Oj0,cyJtI",
".php?&mode=&id=&output=&time=",
".asp?username=&serverMac=",
".asp?mac=&rw=&ver=",
"?cuid=&suid=&affid=",
"/dwn/d.html?sid=",
"/getgewinnspiel.php?uid=",
"/postgewinnspiel.phpuid=",
"/cgi-bin/pr.cgi",
"/log/proc.php?key=",
"/ClientReg.aspx?mac=&Type=&Sn=",
"/ClientTask.aspx?mac=&Type=&Sn=",
"/MicroinstallServiceReport.php",
"/image/logo.jpg?queryid=",
".phpm=&ydf=&e=&w=&t=&apz=",
"v=&step=&hostid=",
"/getfile.php?r=&p=",
"?id=&co=&us=&os=&vr=&dt=",
"GoGo.ashx?Mac=&UserId=&Bate=",
"/index.php?data=66a96e28",
"&fff=&coid=do=lct=",
"&fff=&coid=saf=",
"/ask?&u=a=&m=&h=",
".php?strID=strPC=",
"receiver/online",
"/set/first.html",
"/task.php?id=&task=",
"subid=br=os=flg=",
"guid=ver=stat=ie=os=",
".php?id=x=os=n=",
"/flash_player.exe",
"type=email=hwinfo=",
".asp?prj=&pid=&logdata=",
".asp?prj=&pid=&mac=",
"/report3.ashx?uid=",
"/app/count/inst.php?pcode=",
"/dx.php?i=&x64=os=&a=&f=",
"?Hook1=1,Setup=",
".php?build=&id=&SA=1-0&SP=1-",
"?mod=lr&id=&ver=&bit=&uni=",
"?mod=vv&i=&id=&uni=",
"/photo/6x5x5772=712x5772=716x",
"/install.php?affid=",
"/lurl.php?affid=",
"/install.asp?mac=",
"/curubacom.php?op=",
"/nconfirm.php?code=param=num=",
"php?partner_id=&u=&log_id=&os=",
".php?affid=&data=&v=",
"/getnewv.php?keyword=google&id=",
".php|3F|a|3D|QQk",
"/getpmnum.asp?id=",
".php?v=&id=&wv=",
"webgetinfo.aspx?ver=",
"/cgi-bin/jl/ad03.pl?pv=2&d=",
"/cgi-bin/jl/ad03.pl",
"/prod/MEADInst.exe",
"/load.php?file=",
"/bot.php?hwid=pcname=",
"/isup.php?v=&sox=",
"?user_id=&version_id=&sys=",
"/username.asp?Uid=",
"/?uid=&aid=&linkuid=",
"/download.php?nd=&id=",
"/Install/Post.asp?Uid=",
"&logdata=MacTryCnt|3A|",
"/geo/productid.php",
"/version.php?ver=&app=",
"/update_check?version=",
"/tool/mavatarcfg/.cfg",
"/adv.php?login=&key=&subacc=",
"id=&hwid=&step=&wd=",
".cgi?p=&i=&j=&m=&h=&u=&q=&t=201",
".php?aid=&uncv=&skey=",
"/whois/usgoodluck.com",
"/gate.php?id=&pc=&os=&version=",
"/active_count.php??mac=&pid=",
"/popcode.php?aid=&lc=&domain=",
".php?e=&o=&b=&id=",
"/count.asp?exe=&act=",
"/list.php?c=&v=",
"/distrib_serv/ip_list_",
"/search=ip_list_",
"knock.php?ver=&sid=",
".php?seller=&hash={",
"?gname=&pid=&m=",
"inst.php?pcode=&ucode=",
"/server_privileges.php?",
"/listdir.php?dir=",
"/mkdir.php?dir=",
"/fsize.php?name=/WF-update.log",
"/touch.php?dir=",
".php?w=&fail=&i=",
"/passport.asp?ID=&fn=&Var=",
"/command.php?IP=ID=",
".asp?ID=&Action=GetMyIP",
"/Count.asp?UserID=",
"/Default.aspx?INDEX=",
"&coid=&fff=&IP=&lct=",
"value.php?md=&pc=",
"/count.php?m=c&n=",
"/count.php?m=w&n=",
".php?datos=c|3A|&user=",
"/stat.php?w=&i=00000000000&a=",
"cmd=getproxy&login=",
"cmd=getsocks&login=",
"cmd=getload&login=",
"/total_visitas.php",
".php?email=&lici=&ver=",
"/adobe-flash.exe",
"trf?q=&edv=&o=&kp=&tk=&fk=&ks=",
"/count.asp?mac=&os=&av=",
"/update?product=windows",
"/data/index.asp?act=&ver=Ver&a=",
"/NfStart.asp?ClientId=",
"/stat.php?w=&i=&a=",
"/loc/gate.php?getpic=getpic",
"/stats/counterz.php?id=&stat=",
"/guidcheck.php?q=&g=&n=&h=",
"/index.html?mac=&ver=&os=",
"/?path=qx200.exe",
".php?id=121212121212",
"/search?q=&ua===&al=&cv=",
"/clients.php?os=",
"/id=AAAAAAAAAAA",
".php?r=gate&&group=&debug=",
"/ddos?uid=&ver=",
"/count.php?id=&c=&d=",
"/locker/lock.php?id=",
"/api/urls/?ts=&affid=",
"/wp-content/rss.php",
".php?src=&gpr=&tkr=",
"?ac=1&fd=&gb=&rt=",
".php?0Q9oBPXEN0uECUg",
"/registraMaquina",
"/yeni_urunler.php?hdd=",
"/js/data/encryptedtest.dll",
"/common/versions.php",
"/common/timestamps.php",
"/check_counter.php?pid=&mid=",
"/XPSecurityCenter/",
"/logexp.php?aid=&pid=&kind=",
"/check_version.php&version=",
"/get_servers.php?",
"?mode=&f=&sid5=",
"/data.asp?mydata=&uid=&state=",
"&digits=&siteId=",
"/update/WinUpdater.exe",
"/cgi-bin/feed.cgi",
"/cgi-bin/counter.cgi",
"/api.php//iframer/",
"/api.php//vnc/botI",
"/1234.functions",
"/modules/docs/upload/calc.exe",
"&version_id=&crc=",
"/prinimalka.py/",
"/antivirus-install.exe",
".php?php=receipt",
"/proxy_info.php",
"/.ru|60|utr/qiq",
"/upload/fid=AAAAAAAAAAA",
"/pir/bfg.php?dll=",
"/cgi-bin/dllhost/ac",
"/cgi-bin/ms/check",
"/cgi-bin/ms/flush",
"/cgi-bin/win/wcx",
"/cgi-bin/win/cab",
"/api/ping?stage=&uid=",
"/viruslist/?uid=",
"/admin/count.php?isOnline=1",
"port=|3A|&uname=",
"/Count.asp?mac=&ver=&t=",
"/admin/plugins/",
"/upload/img.jpg",
"/upload/mp3.mp3",
"/js.php?ran=&t=&u=",
"/forum/images.php?id",
"/Default.aspx?ID=",
"/ping.html?r=/utils/",
"mainsettings/settings.sol",
"/features/fetch/time/",
"/features/get/new/mac/",
"/features/set/done/day/",
"/features/fetch/header/",
"/news/show.asp?id1=",
"/count/bindplugin.ini",
".php?id=&os=&bot_id=",
"/forum/login.cgi",
"/Photos/Query.cgi?loginid=",
"/Catelog/login1.cgi",
"/downloads/IPFilter.exe",
"&key=&av=&os=&vm=&digital=",
"/gate.php?cmd=getinstallconfig",
"/info/privacy_security.htm",
"/bbs/search.asp",
"/search.asp?newsid=",
"/proxy/proxychecker/",
"/register_slave.php",
"/is-sending.exe",
"/gr-mail/tr-mail.php",
"/static/hotkey.txt",
"/attachments/ip.php",
"/pk/request.flv",
"/officeaddinupdate.xml",
"/?ts=&ver=&group=&token=",
"/viewimage.php?s=&",
"/rssfeed.php?a=",
"/psp.php?p=&g=&s=&t=&r=",
"/tsone/ajuno.php",
"Target|3a|Message|3a|",
"/poll/update.txt",
"/feed404/mysfeeds.php",
".php?mark=&type=&theos=",
"&mk=&rs=&rq=&ver=",
"/Limitless/Login/",
"/MessageBox.bin",
"/ComputerInfo.bin",
"/WalletSteal.bin",
"/forumdisplay.php?fid=",
"/client/config.ini",
".cgi?Group=&Ver=&Inst&Ask=&Bn=",
"androidbugreport.php",
"/log?|7c|version=|7c|id=|7c|os=",
"/1/6b-558694705129b01c0",
"/gate.php?user=&id=&type=",
".exedownload_helper.ns",
"/setup/?name=&ini=&v=",
"/check_value.php",
"/el/sregister.php?name=",
"/el/slogin.php?uid=",
".php?secue=&pro=",
"?user=&type=&id=",
"/default.asp?tmp=",
"&user&versao&pcname=",
"/auth.cgi?mode=&id=",
"/default.asp?act=&id=",
"/project/check.asp",
"/support/main.html",
"/0/Service Pack ",
"/wp-content/themes/",
"/upfornow/connect.php",
".php?t=&o=&i=&task_id=",
".phpos=&osbit=&antiv=",
"/get.php?file=cmds/main",
"/compose.aspx?s=",
".php?&co=&us=&av=&os=&tr2=",
"/feed.dll?pub_id=",
".php?/index.phpact=bkw9",
"/proto/netstrings.txt",
"/dirconf/check.php",
"/api/client.asmx/SendData",
"/~/cgi-bin/sptr.cgi?_",
"/~/cgi-bin/brvc.cgi?_",
".php?a=start&id=",
"/mac_log/?appid=",
"/getversion.php?sn=",
"/getversion.php?v=",
"/mac/update.zip",
"/images/view.php",
".asp?i=0&v=o10.1",
"/title.php?pizza=",
"/.ni|67 67|ers/bin.sh",
"/payment_gateway/.gz",
".php?i=&data=&hash=",
"/checkupdate.asmx",
"update.php?&key=&dummy=",
"/connect.php?a=1",
"/index.php?c=&r=",
"/uploads/images/201",
"/download.php?listfiles=",
".php?a=n|60|e|3e|",
"?uid=&context=&mode=text&data=",
".php?page=&enckey=",
"/action.php?action=&sent_all=",
"/action.php?action=get_",
"/data_updater.dat",
"/bn_versions/.exe",
".asp?cstring=&tom=",
"/index.php/customer/onlin",
"/index.php/customer/do_it",
".php?name=&user=",
".php?name=path=",
".php?name=&serial=",
".php?name=&date=",
"/attach/1759CB3B5124F217143044",
"/verify.php?version=&GUID=|7b|",
"?encoding=&t=&cc=&process=",
".php?U3ViamVjdD1",
"hl=source=aq=aqi=aql=oq=",
"ext=&pid=&country=&regd=",
"/wp-content/themes/citytv.com",
"/.c.php?request=",
"/redirect.php?loc=mail",
"/do.asp?search=",
"/command.php?id=&os=&com=&ver=",
"/log.php?id=|5b|",
"/keylogger.php?id=&com=&key=",
"/?bit=&version=",
"/ohupdate.php?program=&q=",
".asp?sn=&tmac=&action=&ver=",
"/?action=&guid=",
"/?ip=&referer=&ua=",
"/?action=getuid",
"/?action=&uid=&bit=&version=",
".asp?resid=&photoid=",
"click?sid=&cid=",
"/download/ftp/grabftp.bin",
"/check?iid=kernel=",
"/adm/contador.php",
"/post.php?type=&machinename=",
"/PhantomSuper.class",
"/ArrayReplace.class",
".asp?cookie=&type=&vid=",
"/viewphoto.asp?photoid=",
".php?type=creation",
".php?userid=&auth=",
"/user?pid=&data=",
".php?m=&v=&os=&c=&u=",
"/srv_report?ver=",
"/adobe_flashplayer_7.exe",
"/go/flashplayer_support/",
"/?ID=&Serial=&acao=&Log=",
"/fwlink/?LinkId=",
"/wp-content/plugins/",
"/forum.php?sid=",
".php?id=&token1=&token2=&C=",
"/logo.gif?sessd=&sessc=&sessk=",
".php?RIGHTS=&WIN=",
".php?SSTART=&CRYPTED_DATA=&ID=",
"/sipvoice.php?&session=",
"/counter/?id=&rnd=",
"/gate.php?id=&ver=&m=",
"/cgi-bin/s2.cgi",
"/gate.phprequest=true",
"/cdosys.php?=noupdate&ver=",
"/cdosys.php?=statuslog&log=",
"/cdosys.php?=update&username=",
"/cdosys.php?&log=GetLastError",
"/cdosys.php?key&log=TWND",
"/cdosys.php?add&log=&foundin=",
".php?computerid=",
"/assets/timepicker/x.php?",
"/final111?&nocache=",
"/victim.php?info=&ip=",
"/savekey.php?file=&id=",
"&os=&bits=&av=&host=&plugins=",
".php?HWInfo=}&Time=",
".php?user=&try=&status=",
"?-----BEGIN|20|CERTIFICATE-----",
".exe???????????????",
"/config.php?id=",
"/catalog/outgoing",
"/api/asyncTwitter.php"
};

//This fuction is called when the rules in this file being loaded into MMT-Security
void on_load(){	
	int i;
	//number of uri
	int length = sizeof( list_trojan_uri ) / sizeof( list_trojan_uri[0] );
	const char* uri;
	
	//create a new hash table
	table = mmt_hash_create( length );
	mmt_debug("Rule 33.trojan: Created a table for checking trojat having %d URI", length );
	
	//add items to the hash table
	for( i=0; i<length; i++ ){
      uri = list_trojan_uri[i];
		mmt_hash_add( table, uri, strlen(uri), (void*) uri, false );
	} 
}//end on_load()

//This fuction is called when exiting MMT-Security
void on_unload(){
   mmt_hash_free( table );
}//end on_unload()
]]></embedded_functions>
</beginning>

### Example 4:
**Description:** IP fragmentation : fragments with non-homogeneous TTL (allowed but could be an evasion)
**Protocol(s):** ip
**XML Property:**
<beginning>
<!-- Property 75: IP fragmentation : fragments with non-homogeneous TTL (allowed but could be an evasion).-->
<property value="THEN" delay_units="ms" delay_min="0+" delay_max="100" property_id="75" type_property="EVASION" 
    description="IP fragmentation : fragments with  with non-homogeneous TTL (allowed but could be an evasion).">
      <event value="COMPUTE" event_id="1" 
             description="IP fragment with offset=0"
             boolean_expression="((ip.identification &gt; 0)&amp;&amp;((ip.mf_flag == 1)&amp;&amp;((ip.proto_ttl != 0)&amp;&amp;(ip.src != ip.dst))))"/>
      <event value="COMPUTE" event_id="2" 
             description="IP fragment with same identification and different TTL value"
             boolean_expression="((ip.identification == ip.identification.1)&amp;&amp;((ip.proto_ttl != ip.proto_ttl.1)&amp;&amp;(ip.src != ip.dst)))"/>
</property>
</beginning>


### Example 5:
**Description:** Detection of WannaCry Ransomware
**Protocol(s):** http, ip
**XML Property:**
<beginning>
<!-- Property 38: Detection of WannaCry Ransomware-->
<property value="THEN" delay_units="s" delay_min="0" delay_max="0" property_id="38" type_property="ATTACK" 
    description="Detection of WannaCry Ransomware">
    <event value="COMPUTE" event_id="1" 
           description="SMB client/server intend connecting WannaCry host"
           boolean_expression="(#em_check_WannaCry(http.host) == 1)"/>
     <event value="COMPUTE" event_id="2" 
           description="Print IP addresses"
           boolean_expression="(ip.src != ip.dst)"/> 
</property>

<embedded_functions><![CDATA[
static mmt_hash_t *table = NULL;

static inline int em_check_WannaCry(const char * str){
   return ( mmt_hash_search( table, str, strlen( str ) ) != NULL );
}

const char* domain_lst[] = {
"iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com",
"ifferfsodp9ifjaposdfjhgosurijfaewrwergwea.com",
"ayylmaotjhsstasdfasdfasdfasdfasdfasdfasdf.com",
"iuqssfsodp9ifjaposdfjhgosurijfaewrwergwea.com",
"iuqerfsodp9ifjaposdfjhgosurijfaewrwergweb.com",  
};


//This fuction is called when the rules in this files being loaded into MMT-Security
void on_load(){   
   int i;
   int length = sizeof( domain_lst ) / sizeof( domain_lst[0] );
   const char*str;
   
   //create a new hash table
   table = mmt_hash_create( length );
   mmt_debug("Rule 38.Wannacry: Created a table for checking WannaCry having %d URI", length );
   
   //add items to the hash table
   for( i=0; i<length; i++ ){
      str = domain_lst[i];
      
      if( !mmt_hash_add( table, str, strlen(str), (void*) str, false ) )
         break; 
   } 
}//end on_load()

//This fuction is called when exiting MMT-Security
void on_unload(){
   mmt_hash_free( table );
}//end on_unload()

]]></embedded_functions>


</beginning>

### Task:
Generate a new XML property that matches the scenario and adheres to the protocol(s) context.
